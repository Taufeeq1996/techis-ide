{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Downloads/tech-ide/tech-ide/src/components/App1.jsx\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport CodeEditor from \"./CodeEditor\";\nimport \"brace/mode/python\";\nimport \"brace/theme/monokai\";\nimport \"../Styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet logs = [];\n\n/* eslint-disable */\nconsole.oldLog = console.log;\nconsole.log = function (value) {\n  if (value !== \"using indexedDB for stdlib modules cache\") {\n    console.oldLog(value);\n    logs.push(`${value}`);\n  }\n};\n/* eslint-disable */\n\nconst Scripts = props => {\n  const {\n    code\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"script\", {\n    type: \"text/python\",\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = Scripts;\nconst output = arr => {\n  let out = \"\";\n  for (let i = 0; i < arr.length; i += 1) {\n    if (i !== arr.length - 1) {\n      out = out.concat(`${arr[i]}\\n`);\n    } else {\n      out = out.concat(arr[i]);\n    }\n  }\n  return out;\n};\nclass App1 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      code: \"\",\n      outputArr: []\n    };\n  }\n  run(callback) {\n    try {\n      window.brython([1]);\n    } catch (error) {\n      console.oldLog(error);\n    }\n\n    //added setTimeout because console where being updated after 100 ms\n    setTimeout(function () {\n      this.setState({\n        outputArr: logs\n      }), console.oldLog(\"logsgasga\", logs);\n    }.bind(this), 100);\n  }\n  clearLogs() {\n    logs = [];\n    code;\n    this.setState({\n      outputArr: logs\n    });\n  }\n  render() {\n    const {\n      code,\n      outputArr\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"python-editor-container\",\n        children: [/*#__PURE__*/_jsxDEV(Helmet, {\n          children: [/*#__PURE__*/_jsxDEV(\"script\", {\n            type: \"text/javascript\",\n            src: \"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython.min.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n            type: \"text/javascript\",\n            src: \"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython_stdlib.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Scripts, {\n          code: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"python-editor-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"run-input-btn\",\n            type: \"button\",\n            onClick: () => this.run(),\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n            id: \"python-code-editor\",\n            value: code,\n            mode: \"python\"\n            // theme=\"monokai\"\n            ,\n            onChange: text => this.setState({\n              code: text\n            }),\n            width: `${window.innerWidth * 1}px`,\n            height: `${window.innerHeight / 1.6}px`,\n            fontSize: \"1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"python-editor-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.clearLogs(),\n            children: \"Clear Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"python-output\",\n            readOnly: true,\n            value: output(outputArr),\n            placeholder: \"> output goes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n}\nScripts.propTypes = {\n  code: PropTypes.string.isRequired\n};\nexport default App1;\nvar _c;\n$RefreshReg$(_c, \"Scripts\");","map":{"version":3,"names":["React","Helmet","PropTypes","CodeEditor","logs","console","oldLog","log","value","push","Scripts","props","code","output","arr","out","i","length","concat","App1","Component","state","outputArr","run","callback","window","brython","error","setTimeout","setState","bind","clearLogs","render","text","innerWidth","innerHeight","propTypes","string","isRequired"],"sources":["/Users/musubimanagement/Downloads/tech-ide/tech-ide/src/components/App1.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"brace/mode/python\";\r\nimport \"brace/theme/monokai\";\r\nimport \"../Styles/App.css\";\r\n\r\nlet logs = [];\r\n\r\n/* eslint-disable */\r\nconsole.oldLog = console.log;\r\n\r\n\r\nconsole.log = function (value) {\r\n  if (value !== \"using indexedDB for stdlib modules cache\") {\r\n    console.oldLog(value);\r\n    logs.push(`${value}`);\r\n  }\r\n};\r\n/* eslint-disable */\r\n\r\nconst Scripts = props => {\r\n  const { code } = props;\r\n  return <script type=\"text/python\">{code}</script>;\r\n}\r\n\r\nconst output = arr => {\r\n  let out = \"\";\r\n  for (let i = 0; i < arr.length; i += 1) {\r\n    if (i !== arr.length - 1) {\r\n      out = out.concat(`${arr[i]}\\n`);\r\n    } else {\r\n      out = out.concat(arr[i]);\r\n    }\r\n  }\r\n  return out;\r\n};\r\n\r\nclass App1 extends React.Component {\r\n  state = {\r\n    code: \"\",\r\n    outputArr: [],\r\n  };\r\n\r\n  run(callback) {\r\n    try {\r\n      window.brython([1]);\r\n    } catch (error) {\r\n      console.oldLog(error);\r\n    }\r\n\r\n    //added setTimeout because console where being updated after 100 ms\r\n    setTimeout(\r\n      function () {\r\n        this.setState({\r\n          outputArr: logs\r\n        }),\r\n          console.oldLog(\"logsgasga\", logs);\r\n      }\r\n        .bind(this),\r\n      100\r\n    )\r\n  }\r\n\r\n  clearLogs() {\r\n    logs = [];\r\n    code\r\n    this.setState({\r\n      outputArr: logs\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { code, outputArr } = this.state;\r\n    return (\r\n      <>\r\n      <div id=\"python-editor-container\">\r\n        \r\n        <Helmet>\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython.min.js\"\r\n          />\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython_stdlib.js\"\r\n          />\r\n        </Helmet>\r\n        <Scripts code={code} />\r\n        <div id=\"python-editor-input\">\r\n          <button id=\"run-input-btn\" type=\"button\" onClick={() => this.run()}>\r\n            Run\r\n          </button>\r\n          <CodeEditor\r\n            id=\"python-code-editor\"\r\n            value={code}\r\n            mode=\"python\"\r\n            // theme=\"monokai\"\r\n            onChange={text => this.setState({ code: text })}\r\n            width={`${(window.innerWidth*1)}px`}\r\n            height={`${window.innerHeight/1.6}px`}\r\n            fontSize={\"1rem\"}\r\n          />\r\n          \r\n        </div>\r\n        <div id=\"python-editor-output\">\r\n          <button type=\"button\" onClick={() => this.clearLogs()}>\r\n            Clear Output\r\n          </button>\r\n          <textarea\r\n            id=\"python-output\"\r\n            readOnly\r\n            value={output(outputArr)}\r\n            placeholder=\"> output goes here...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nScripts.propTypes = {\r\n  code: PropTypes.string.isRequired\r\n};\r\n\r\nexport default App1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}