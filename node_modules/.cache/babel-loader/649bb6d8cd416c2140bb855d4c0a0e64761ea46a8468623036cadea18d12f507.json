{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Downloads/tech-ide/tech-ide/src/components/CodeEditor.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AceEditor from \"react-ace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass CodeEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onChange = value => {\n      const {\n        onChange\n      } = this.props;\n      this.setState({\n        value\n      });\n      onChange(value);\n    };\n    this.clearInput = () => {\n      this.setState({\n        value: \"\"\n      });\n    };\n    this.getValue = () => {\n      const {\n        value\n      } = this.state;\n      return value;\n    };\n    const {\n      value: _value\n    } = this.props;\n    this.state = {\n      value: _value\n      // inputArr:[]\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      value\n    } = this.props;\n    if (prevProps.value !== value) {\n      this.onChange(value);\n    }\n  }\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cancel-input-btn\",\n        type: \"button\",\n        onClick: () => this.clearInput(),\n        children: \"Clear Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        theme: \"twilight\",\n        showPrintMargin: false,\n        editorProps: {\n          $blockScrolling: true\n        },\n        ...this.props,\n        onChange: this.onChange,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n}\nCodeEditor.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nCodeEditor.defaultProps = {\n  value: \"\",\n  onChange: () => null\n};\nexport default CodeEditor;","map":{"version":3,"names":["React","PropTypes","AceEditor","CodeEditor","PureComponent","constructor","props","onChange","value","setState","clearInput","getValue","state","componentDidUpdate","prevProps","render","$blockScrolling","propTypes","string","func","defaultProps"],"sources":["/Users/musubimanagement/Downloads/tech-ide/tech-ide/src/components/CodeEditor.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nclass CodeEditor extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { value } = this.props;\r\n\r\n    this.state = {\r\n      value,\r\n      // inputArr:[]\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { value } = this.props;\r\n\r\n    if (prevProps.value !== value) {\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  onChange = value => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({ value });\r\n    onChange(value);\r\n  };\r\n\r\n  clearInput = () => {\r\n    this.setState({\r\n      value:\"\"\r\n    })\r\n  }\r\n\r\n  getValue = () => {\r\n    const { value } = this.state;\r\n    return value;\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <button id=\"cancel-input-btn\" type=\"button\" onClick={() => this.clearInput()}>Clear Code</button>\r\n      <AceEditor\r\n        theme=\"twilight\"\r\n        showPrintMargin={false}\r\n        editorProps={{ $blockScrolling: true }}\r\n        {...this.props}\r\n        onChange={this.onChange}\r\n        value={value}\r\n      />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCodeEditor.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nCodeEditor.defaultProps = {\r\n  value: \"\",\r\n  onChange: () => null\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,WAAW;AAAC;AAAA;AAElC,MAAMC,UAAU,SAASH,KAAK,CAACI,aAAa,CAAC;EAC3CC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAkBfC,QAAQ,GAAGC,KAAK,IAAI;MAClB,MAAM;QAAED;MAAS,CAAC,GAAG,IAAI,CAACD,KAAK;MAE/B,IAAI,CAACG,QAAQ,CAAC;QAAED;MAAM,CAAC,CAAC;MACxBD,QAAQ,CAACC,KAAK,CAAC;IACjB,CAAC;IAAA,KAEDE,UAAU,GAAG,MAAM;MACjB,IAAI,CAACD,QAAQ,CAAC;QACZD,KAAK,EAAC;MACR,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDG,QAAQ,GAAG,MAAM;MACf,MAAM;QAAEH;MAAM,CAAC,GAAG,IAAI,CAACI,KAAK;MAC5B,OAAOJ,KAAK;IACd,CAAC;IAhCC,MAAM;MAAEA,KAAK,EAALA;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAE5B,IAAI,CAACM,KAAK,GAAG;MACXJ,KAAK,EAALA;MACA;IACF,CAAC;EACH;;EAEAK,kBAAkB,CAACC,SAAS,EAAE;IAC5B,MAAM;MAAEN;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAE5B,IAAIQ,SAAS,CAACN,KAAK,KAAKA,KAAK,EAAE;MAC7B,IAAI,CAACD,QAAQ,CAACC,KAAK,CAAC;IACtB;EACF;EAoBAO,MAAM,GAAG;IACP,MAAM;MAAEP;IAAM,CAAC,GAAG,IAAI,CAACI,KAAK;IAE5B,oBACE;MAAA,wBACA;QAAQ,EAAE,EAAC,kBAAkB;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAM,IAAI,CAACF,UAAU,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACjG,QAAC,SAAS;QACR,KAAK,EAAC,UAAU;QAChB,eAAe,EAAE,KAAM;QACvB,WAAW,EAAE;UAAEM,eAAe,EAAE;QAAK,CAAE;QAAA,GACnC,IAAI,CAACV,KAAK;QACd,QAAQ,EAAE,IAAI,CAACC,QAAS;QACxB,KAAK,EAAEC;MAAM;QAAA;QAAA;QAAA;MAAA,QACb;IAAA,gBACC;EAEP;AACF;AAEAL,UAAU,CAACc,SAAS,GAAG;EACrBT,KAAK,EAAEP,SAAS,CAACiB,MAAM;EACvBX,QAAQ,EAAEN,SAAS,CAACkB;AACtB,CAAC;AAEDhB,UAAU,CAACiB,YAAY,GAAG;EACxBZ,KAAK,EAAE,EAAE;EACTD,QAAQ,EAAE,MAAM;AAClB,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}